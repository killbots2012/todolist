{"ast":null,"code":"var _jsxFileName = \"/home/frank/reactprojects/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuidv4 from 'uuid/v4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoAp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n}\n\n_s(App, \"Co+oX9O3pMnlY40DokhjoAfbhpA=\");\n\n_c = App;\nuseEffect(() => {\n  const storedTodos = JSON.parse(localstorage.getItem(LOCAL_STORAGE_KEY));\n  if (storedTodos) setTodos(storedTodos);\n  return () => {\n    cleanup;\n  };\n}, []);\nuseEffect(() => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n}, [todos]);\n\nfunction toggleTodo(id) {\n  const newTodos = [...todos];\n\n  const todo = newTodos.find[todos => todo.id === id];\n\n  todo.complete = !todo.complete;\n}\n\nfunction handleAddTodo(e) {\n  const name = todoNameRef.current.value;\n  if (name === '') return;\n  setTodos(prevTodos => {\n    return [...prevTodos, {\n      id: uuidv4(),\n      name,\n      complete: false\n    }];\n  });\n  todoNameRef.current.value = null;\n}\n\nfunction handleClearTodos() {\n  const newTodos = todos.filter(todo => !todo.complete);\n  setTodos(newTodos);\n}\n\n/*#__PURE__*/\n_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(TodoList, {\n    todos: todos,\n    toggleTodo: toggleTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: todoNameRef,\n    type: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleAddTodo,\n    children: \"Add Todo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClearTodos,\n    children: \"Clear Complete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [todos.filter(todo => !todo.complete).length, \" left to do\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/frank/reactprojects/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","uuidv4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localstorage","getItem","cleanup","localStorage","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","e","name","current","value","prevTodos","handleClearTodos","filter","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;;AAEA,MAAMC,iBAAiB,GAAG,cAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,WAAW,GAAGR,MAAM,EAA1B;AAED;;GAJQK,G;;KAAAA,G;AAMTJ,SAAS,CAAC,MAAM;AACd,QAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,iBAArB,CAAX,CAApB;AACA,MAAIK,WAAJ,EAAiBF,QAAQ,CAACE,WAAD,CAAR;AACjB,SAAO,MAAM;AACXK,IAAAA,OAAO;AACR,GAFD;AAGD,CANQ,EAMN,EANM,CAAT;AAQAb,SAAS,CAAC,MAAM;AACdc,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,iBAArB,EAAwCM,IAAI,CAACO,SAAL,CAAeX,KAAf,CAAxC;AACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,SAASY,UAAT,CAAoBC,EAApB,EAAuB;AACrB,QAAMC,QAAQ,GAAG,CAAC,GAAGd,KAAJ,CAAjB;;AACA,QAAMe,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAchB,KAAK,IAAIe,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAb;;AACAE,EAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACD;;AAED,SAASC,aAAT,CAAuBC,CAAvB,EAAyB;AACvB,QAAMC,IAAI,GAAGlB,WAAW,CAACmB,OAAZ,CAAoBC,KAAjC;AACA,MAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBnB,EAAAA,QAAQ,CAACsB,SAAS,IAAI;AACpB,WAAO,CAAC,GAAGA,SAAJ,EAAe;AAACV,MAAAA,EAAE,EAAEhB,MAAM,EAAX;AAAeuB,MAAAA,IAAf;AAAqBH,MAAAA,QAAQ,EAAE;AAA/B,KAAf,CAAP;AACD,GAFO,CAAR;AAGAf,EAAAA,WAAW,CAACmB,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AACD,SAASE,gBAAT,GAA4B;AAC1B,QAAMV,QAAQ,GAAGd,KAAK,CAACyB,MAAN,CAAaV,IAAI,IAAI,CAACA,IAAI,CAACE,QAA3B,CAAjB;AACAhB,EAAAA,QAAQ,CAACa,QAAD,CAAR;AACD;;AAED;AACE;AAAA,0BACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEd,KAAjB;AAAwB,IAAA,UAAU,EAAEY;AAApC;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAO,IAAA,GAAG,EAAEV,WAAZ;AAAyB,IAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAQ,IAAA,OAAO,EAAEgB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAQ,IAAA,OAAO,EAAEM,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAA,eAAMxB,KAAK,CAACyB,MAAN,CAAaV,IAAI,IAAI,CAACA,IAAI,CAACE,QAA3B,EAAqCS,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAAA,gBADF;;AASA,eAAe3B,GAAf","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport TodoList from './TodoList'\nimport uuidv4 from 'uuid/v4'\n\nconst LOCAL_STORAGE_KEY = 'todoAp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n}\n\nuseEffect(() => {\n  const storedTodos = JSON.parse(localstorage.getItem(LOCAL_STORAGE_KEY))\n  if (storedTodos) setTodos(storedTodos)\n  return () => {\n    cleanup\n  }\n}, [])\n\nuseEffect(() => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n}, [todos])\n\nfunction toggleTodo(id){\n  const newTodos = [...todos]\n  const todo = newTodos.find[todos => todo.id === id]\n  todo.complete = !todo.complete\n}\n\nfunction handleAddTodo(e){\n  const name = todoNameRef.current.value\n  if (name === '') return\n  setTodos(prevTodos => {\n    return [...prevTodos, {id: uuidv4(), name, complete: false}]\n  })\n  todoNameRef.current.value = null\n}\nfunction handleClearTodos() {\n  const newTodos = todos.filter(todo => !todo.complete)\n  setTodos(newTodos)\n}\n\n(\n  <>\n    <TodoList todos={todos} toggleTodo={toggleTodo} />\n    <input ref={todoNameRef} type=\"text\" />\n    <button onClick={handleAddTodo}>Add Todo</button>\n    <button onClick={handleClearTodos}>Clear Complete</button>\n    <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n  </>\n)\nexport default App;\n"]},"metadata":{},"sourceType":"module"}